---
# Production monitoring playbook - Run every minute via cron/systemd
# Automatically creates and closes ServiceNow incidents based on device status

- name: Continuous Network Device Monitoring
  hosts: network_devices
  gather_facts: yes
  serial: "{{ monitoring_batch_size | default(25) }}"
  strategy: free
  
  vars:
    # ServiceNow connection from vault
    servicenow_host: "{{ vault_servicenow_host }}"
    servicenow_username: "{{ vault_servicenow_username }}"
    servicenow_password: "{{ vault_servicenow_password }}"
    
    # Default incident parameters from vault
    servicenow_default_caller: "{{ vault_servicenow_default_caller }}"
    servicenow_default_assignment_group: "{{ vault_servicenow_default_assignment_group }}"
    
  pre_tasks:
    - name: Verify ServiceNow credentials are loaded
      assert:
        that:
          - vault_servicenow_host is defined
          - vault_servicenow_username is defined
          - vault_servicenow_password is defined
        fail_msg: "ServiceNow vault credentials not loaded. Run with --ask-vault-pass"
      run_once: true
      delegate_to: localhost

  roles:
    - role: device_uptime
      tags: [uptime, critical]
      vars:
        # Adjust urgency/impact based on device criticality
        uptime_incident_urgency: >-
          {%- if 'core' in group_names -%}high
          {%- elif 'access' in group_names -%}medium
          {%- else -%}low{%- endif -%}
        uptime_incident_impact: >-
          {%- if 'core' in group_names -%}high
          {%- elif 'access' in group_names -%}medium
          {%- else -%}low{%- endif -%}

  post_tasks:
    - name: Log monitoring completion
      debug:
        msg: "Monitoring check completed for {{ inventory_hostname }} at {{ ansible_date_time.iso8601 }}"
      tags: [always]
      when: monitoring_debug | default(false)